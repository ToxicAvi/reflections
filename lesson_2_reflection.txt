Q:What happens when you initialize a repository? 
Why do you need to do it?

A:When i initialize a repo it creates a hidden file called .git 
with metadata about the repo, and basically turn a regular 
directory into a repo. I need to do that so that i can use 
version control on the directory, tracking all the files in it.

Q:How is the staging area different from the working directory 
and the repository?
What value do you think it offers?

A:the staging area is sort of a meta-area or a temporary area
since it only represents then files that are going to be commited.
It offers us a way of controling our commits even more in detail
to make them as logical as possible.

Q:How can you use the staging area to make sure you have one commit
per logical
change?

A:We can add only the files that were edited to deal with one specific
thing that represents a logical change and only commit them together.

Q:What are some situations when branches would be helpful in
keeping your history organized? How would branches help?

A:It helps by organizing my work in a way that if i make a change
i don't necesarly want in my code later, or if i want to work on
different features at the same time without having to deal with 
all the bugs i can do that by creating different branches for different
features and know more precisely what i'm working on and when.

Q:How do the diagrams help you visualize the branch structure?

A:The diagrams help me vizualize the branch structure by showing me
from which commits branches start and which commits are commited in
each branch.

Q:What is the result of merging two branches together?
Why do we represent it in
the diagram the way we do?

A:the result is making the branch we merge into the parent of the last
commit of the bramch we merge, which is why it is visualized by a branch 
going towards the merging branch. 

Q:What are the pros and cons of Git's automatic merging vs.
always doing merges
manually?

A:Git's automatic merging can save us time when we want to add our 
work to the master branch or update our brach with the up to date
master branch for example, by adding and updating the cnages we met
when possible.